@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    --card: 0 0% 6%;
    --card-foreground: 0 0% 100%;
    --popover: 0 0% 6%;
    --popover-foreground: 0 0% 100%;
    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 0% 10%;
    --secondary-foreground: 0 0% 100%;
    --muted: 0 0% 10%;
    --muted-foreground: 0 0% 60%;
    --accent: 0 0% 10%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 0% 45%;
    --destructive-foreground: 0 0% 100%;
    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 0 0% 80%;
    --radius: 12px;

    /* 동적 폰트 크기 변수 */
    --font-size-multiplier: 1;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground font-sans;
    font-feature-settings: "rlig" 1, "calt" 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* iOS 스타일 스크롤바 숨기기 */
  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }

  /* iOS 스타일 터치 피드백 */
  .ios-touch {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
  }

  /* iOS 스타일 입력 필드 */
  input,
  textarea {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
}

/* 동적 폰트 크기 타이포그래피 시스템 */
@layer components {
  /* 헤딩 계층 - 동적 크기 적용 */
  .heading-1 {
    font-size: calc(3rem * var(--font-size-multiplier));
    @apply font-bold leading-tight tracking-tight text-white;
    transition: font-size 0.3s ease-out;
  }

  .heading-2 {
    font-size: calc(2rem * var(--font-size-multiplier));
    @apply font-bold leading-tight tracking-tight text-white;
    transition: font-size 0.3s ease-out;
  }

  .heading-3 {
    font-size: calc(1.5rem * var(--font-size-multiplier));
    @apply font-semibold leading-snug text-white;
    transition: font-size 0.3s ease-out;
  }

  .heading-4 {
    font-size: calc(1.25rem * var(--font-size-multiplier));
    @apply font-semibold leading-snug text-white;
    transition: font-size 0.3s ease-out;
  }

  .heading-5 {
    font-size: calc(1rem * var(--font-size-multiplier));
    @apply font-semibold leading-normal text-white;
    transition: font-size 0.3s ease-out;
  }

  .heading-6 {
    font-size: calc(0.875rem * var(--font-size-multiplier));
    @apply font-semibold leading-normal text-white;
    transition: font-size 0.3s ease-out;
  }

  /* 본문 텍스트 - 동적 크기 적용 */
  .body-large {
    font-size: calc(1rem * var(--font-size-multiplier));
    @apply font-normal leading-relaxed text-white;
    transition: font-size 0.3s ease-out;
  }

  .body-medium {
    font-size: calc(0.875rem * var(--font-size-multiplier));
    @apply font-normal leading-normal text-white;
    transition: font-size 0.3s ease-out;
  }

  .body-small {
    font-size: calc(0.75rem * var(--font-size-multiplier));
    @apply font-normal leading-normal text-gray-300;
    transition: font-size 0.3s ease-out;
  }

  /* Linear/V0 스타일 텍스트 색상 계층 */
  .text-primary {
    @apply text-white;
  }

  .text-secondary {
    @apply text-gray-200;
  }

  .text-tertiary {
    @apply text-gray-300;
  }

  .text-quaternary {
    @apply text-gray-400;
  }

  .text-muted {
    @apply text-gray-500;
  }

  .text-disabled {
    @apply text-gray-600;
  }

  /* 라벨 및 캡션 - 동적 크기 적용 */
  .label-large {
    font-size: calc(0.875rem * var(--font-size-multiplier));
    @apply font-medium leading-normal text-white;
    transition: font-size 0.3s ease-out;
  }

  .label-medium {
    font-size: calc(0.75rem * var(--font-size-multiplier));
    @apply font-medium leading-normal text-white;
    transition: font-size 0.3s ease-out;
  }

  .label-small {
    font-size: calc(0.75rem * var(--font-size-multiplier));
    @apply font-medium leading-tight text-gray-300;
    transition: font-size 0.3s ease-out;
  }

  .caption {
    font-size: calc(0.75rem * var(--font-size-multiplier));
    @apply font-normal leading-tight text-gray-400;
    transition: font-size 0.3s ease-out;
  }

  /* 특수 텍스트 - 동적 크기 적용 */
  .display-large {
    font-size: calc(4rem * var(--font-size-multiplier));
    @apply font-bold leading-none tracking-tight text-white;
    transition: font-size 0.3s ease-out;
  }

  .display-medium {
    font-size: calc(3rem * var(--font-size-multiplier));
    @apply font-bold leading-none tracking-tight text-white;
    transition: font-size 0.3s ease-out;
  }

  .display-small {
    font-size: calc(2rem * var(--font-size-multiplier));
    @apply font-bold leading-tight tracking-tight text-white;
    transition: font-size 0.3s ease-out;
  }

  /* 메타 정보 텍스트 */
  .text-meta {
    font-size: calc(0.75rem * var(--font-size-multiplier));
    @apply text-gray-500;
    transition: font-size 0.3s ease-out;
  }

  .text-timestamp {
    font-size: calc(0.75rem * var(--font-size-multiplier));
    @apply text-gray-500;
    transition: font-size 0.3s ease-out;
  }

  /* 반응형 폰트 크기 조정 */
  @media (max-width: 640px) {
    .heading-1 {
      font-size: calc(2.5rem * var(--font-size-multiplier));
    }

    .heading-2 {
      font-size: calc(1.75rem * var(--font-size-multiplier));
    }

    .display-large {
      font-size: calc(3rem * var(--font-size-multiplier));
    }

    .display-medium {
      font-size: calc(2.5rem * var(--font-size-multiplier));
    }
  }
}

/* Linear/V0 스타일 미니멀 애니메이션 */
@layer components {
  .transition-minimal {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-minimal {
    @apply transition-minimal hover:bg-gray-800;
  }

  .button-minimal {
    @apply transition-minimal hover:scale-[1.02] active:scale-[0.98];
  }

  .card-minimal {
    @apply transition-minimal hover:bg-gray-800;
  }
}

/* 접근성 고려 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* iOS 스타일 안전 영역 */
@supports (padding: max(0px)) {
  .safe-area-top {
    padding-top: max(1rem, env(safe-area-inset-top));
  }
  .safe-area-bottom {
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
}
